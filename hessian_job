#!/bin/bash
# UG Section 2.5, page UG-24 Job Submission Options
# Add another # at the beginning of the line to comment out a line
# NOTE: adding a switch to the command line will override values in this file.

# These options are MANDATORY at ALCF; Your qsub will fail if you don't provide them.
#PBS -A QTensor
#PBS -l walltime=01:00:00

# Highly recommended 
# The first 15 characters of the job name are displayed in the qstat output:
#PBS -N ode
#file systems used by the job
#PBS -l filesystems=home:eagle
#PBS -l select=1:system=polaris

# If you need a queue other than the default, which is prod (uncomment to use)
#PBS -q debug

# Controlling the output of your application
# UG Sec 3.3 page UG-42 Managing Output and Error Files
# By default, PBS spools your output on the compute node and then uses scp to move it the
# destination directory after the job finishes.  Since we have globally mounted file systems
# it is highly recommended that you use the -k option to write directly to the destination
# the doe stands for direct, output, error
#PBS -k doe
#PBS -o ./stdout.out
#PBS -e ./stderr.out

echo Working directory is $PBS_O_WORKDIR
cd $PBS_O_WORKDIR

echo Jobid: $PBS_JOBID
echo Running on host `hostname`
echo Running on nodes `cat $PBS_NODEFILE`

# MPI and OpenMP settings
NNODES=`wc -l < $PBS_NODEFILE`
NRANKS_PER_NODE=4
NDEPTH=8
NTHREADS=8

NTOTRANKS=$(( NNODES * NRANKS_PER_NODE))
echo "NUM_OF_NODES= ${NNODES} TOTAL_NUM_RANKS= ${NTOTRANKS} RANKS_PER_NODE= ${NRANKS_PER_NODE} THREADS_PER_RANK= ${NTHREADS}"


# CHECK THE FOLLOWING SECTION FOR THE FOLDER STRUCTURE
# results_root=/grand/projects/QTensor/ODE_ML/results
# results_root=/grand/projects/QTensor/ODE_ML/results/cifar100/resnet-32-4/sparse-finetune/method_l1_ratio_0.9_epochs_1_batch_512_sgd_lr_0.1-stepwise-100-200-0.1_mm_0.9_w_decay_0.0002_init_kaiming_seed_1989_epoch_pre_50_batch_pre_512_lr_pre_0.1-stepwise-100-150-0.1
results_root=/grand/projects/QTensor/ODE_ML/results/cifar100/vgg11/sparse-finetune/method_l1_ratio_0.8_epochs_2_batch_512_sgd_lr_0.1-stepwise-100-200-0.1_mm_0.9_w_decay_0.0002_init_kaiming_seed_1989_epoch_pre_150_batch_pre_512_lr_pre_0.1-stepwise-50-100-0.1

module load conda
conda activate mpi_boson

# Arguments for network
net_name=vgg11
depth=32
widen_factor=4
# Arguments for dataset
loader_name=cifar100
filename=CIFAR100
out_dim=100
# Arguments for pruning
prune_method=l1
prune_last=0
prune_ratio=0.8


mpiexec -n ${NTOTRANKS} --ppn ${NRANKS_PER_NODE} --depth=${NDEPTH} --cpu-bind depth --env OMP_NUM_THREADS=${NTHREADS} -env OMP_PLACES=threads python -u experiment-spectrum_copy.py -pt ${results_root} -bs 512 -nt ${net_name} -dp ${depth} -wf ${widen_factor} -ot ${out_dim} -pr ${prune_ratio}

# mpiexec -n ${NTOTRANKS} --ppn ${NRANKS_PER_NODE} --depth=${NDEPTH} --cpu-bind depth --env OMP_NUM_THREADS=${NTHREADS} -env OMP_PLACES=threads python experiment-spectrum.py -pt ${results_root} -pi 1 -bs 512 -no 2
# mpiexec -n ${NTOTRANKS} --ppn ${NRANKS_PER_NODE} --depth=${NDEPTH} --cpu-bind depth --env OMP_NUM_THREADS=${NTHREADS} -env OMP_PLACES=threads python test_acc.py -pt ${results_root} -pi 1 -bs 512 -no 2